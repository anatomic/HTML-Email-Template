#!/usr/bin/php
<?php
$builder = new EmailBuilder();
if($builder->buildEmailVision()){
	die(0);
}
else{
	die(3);
}


class EmailBuilder{
	protected $htmlFile = 'index.html';
	protected $htmlCounter = 0;
	protected $plainFile = 'plain.txt';
	protected $plainCounter = 0;
	protected $settingsFile = 'config/settings.ini';
	protected static $settings = array();

	public function __construct(){
		if(!is_readable($this->settingsFile)){
			throw new Exception("Settings file not readable. Make sure you set it up at config/settings.ini");
		}
		$newSettings = parse_ini_file($this->settingsFile, true);
		foreach($newSettings as $group => $settings){
			if(isset(self::$settings[$group])){
				self::$settings[$group] = array_merge(self::$settings[$group], $settings);
			}
			else{
				self::$settings[$group] = $settings;
			}
		}
	}

	public function setHtmlFile($filename){
		$this->htmlFile = $filename;
	}
	
	public function setPlainFile($filename){
		$this->plainFile = $filename;
	}
	
	public function replaceHtmlLink($match){
		$newLink = 'href="http://'.$match["url"].'?CMP=EMA-'.self::$settings["email"]["id"].'&CRE='.$this->htmlCounter.'&PLA=html&TYPE=email"';
		fwrite(STDOUT, 'HTML link ' . $this->htmlCounter . ': ' . $newLink . "\n");
		$this->htmlCounter++;
		return $newLink;
	}
	
	public function replaceTextLink($match){
		$newLink = 'http://'.$match["url"].'?CMP=EMA-'.self::$settings["email"]["id"].'&CRE='.$this->plainCounter.'&PLA=text&TYPE=email';
		fwrite(STDOUT, 'Plain link ' . $this->plainCounter . ': ' . $newLink . "\n");
		$this->plainCounter++;
		return $newLink;
	}
	
	public function buildEmailVision(){
		$stdout = fopen('php://stdout', 'w');
		$html = fopen($this->htmlFile, 'r');
		$plain = fopen($this->plainFile, 'r');
		
		if(file_exists('export/emv.txt')){
			$emv = fopen('export/emv.txt', 'w');
		}
		else{
			mkdir('export', 0755);
			$emv = fopen('export/emv.txt', 'w');
		}
		
		$htmlContents = fread($html, filesize($this->htmlFile));
		$plainContents = fread($plain, filesize($this->plainFile));
		fclose($html);
		fclose($plain);
		
		$linkTagPattern = '/href="http:\/\/(?P<url>[\w\d\.\/-]+)"/';
		$textLinkPattern = '/http:\/\/(?P<url>[\w\d\.\/-]+)/';
		$htmlContents = preg_replace_callback($linkTagPattern, "self::replaceHtmlLink" , $htmlContents, -1 , $htmlCount);
		$plainContents = preg_replace_callback($textLinkPattern, "self::replaceTextLink", $plainContents, -1, $plainCount);
		
		fwrite(STDOUT, 'Total HTML links: ' . $htmlCount . "\n");
		fwrite(STDOUT, 'Total plain text links: ' . $plainCount . "\n");
		
		fwrite($emv, "[EMV TEXTPART]\n");
		fwrite($emv, $plainContents);
		fwrite($emv, "\n\n");
		fwrite($emv, "[EMV HTMLPART]\n");
		fwrite($emv, $htmlContents);
		fclose($emv);
		return true;
	}
	
}